[language-server.basedpyright]
command = "basedpyright-langserver"
args = ["--stdio"]

[language-server.basedpyright.config]
basedpyright.analysis.diagnosticMode = "openFilesOnly"
basedpyright.analysis.typeCheckingMode = "standard"

[language-server.ruff]
command = "ruff"
args = ["server"]

[language-server.ruff.config.settings]
lineLength = 100

[language-server.ruff.config.settings.lint]
select = [
  "E",
  "F",
  "W",
  "B",
  "I",
  "A",
  "RUF",
  "COM",
  "N",
  "LOG",
  "ERA",
  "W",
  "UP",
  "ANN",
  "ASYNC",
  "S",
  "RET",
  "TCH",
  "ARG",
  "PTH",
]
preview = true

[language-server.ruff.config.settings.format]
preview = true
quote-style = "double"
docstring-code-format = true
indent-style = "space"

[[language]]
name = "python"
language-servers = ["basedpyright", "ruff"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", ".git", ".jj", ".venv/"]
injection-regex = "py(thon)?"
file-types = [
  "py",
  "pyi",
  "py3",
  "pyw",
  "ptl",
  "rpy",
  "cpy",
  "ipy",
  "pyt",
  { glob = ".python_history" },
  { glob = ".pythonstartup" },
  { glob = ".pythonrc" },
  { glob = "SConstruct" },
  { glob = "SConscript" },
]
auto-format = true
formatter = { command = "ruff", args = ["format", "-"] }

[[language]]
name = 'toml'
formatter = { command = "taplo", args = ["format", "-"] }
auto-format = true

[[language]]
name = "rust"
auto-format = true

roots = ["Cargo.toml", "Cargo.lock"]

[language.auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false

[language-server.rust-analyzer.config.check]
command = "clippy"
